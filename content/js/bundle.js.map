{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","content/data/meta.json","bundle.js","node_modules/browserify/node_modules/path-browserify/index.js","node_modules/browserify/node_modules/process/browser.js","src/World.coffee","src/actions.coffee","src/brain.coffee","src/brain/attacker.coffee","src/brain/defender.coffee","src/brain/human.coffee","src/bullet.coffee","src/input.coffee","src/main.coffee","src/status.coffee","src/team.coffee","src/unit.coffee","src/util.coffee","src/view.coffee"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","version",2,"process","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","filter","xs","res","push","splitPathRe","splitPath","filename","exec","slice","resolve","resolvedPath","resolvedAbsolute","arguments","path","cwd","TypeError","charAt","split","p","join","normalize","isAbsolute","trailingSlash","substr","paths","Array","prototype","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","extname","str","len","this","_process",3,"cleanUpNextTick","draining","currentQueue","queue","queueIndex","drainQueue","timeout","setTimeout","run","clearTimeout","Item","fun","array","noop","nextTick","args","apply","title","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","chdir","umask",4,"AttackerBrain","Bullet","DefenderBrain","HumanBrain","Input","Team","Unit","World","meta","util","container","viewsize","size1","b","base","core","defnum","gPause","gStart","humanBrain","j","k","len1","len2","len3","m","mapstr","memberNum","playerTeam","ref","ref1","ref2","ref3","ref4","t0","t1","v","x","y","size","input","size2","gridSize","resolution","resolution2","sizer","sizer2","gridSizer","sizerm","field","Uint8Array","dismap","Int32Array","team","replace","parseInt","mapsize","mapresolution","coredismap","coredirmap","enemydismap","enemydismapUpdate","setCoredismap","setCoredirmap","rand","addUnit","worker","Worker","addEventListener","data","setEnemydismap","units","some","_this","gField","setupField","addChild","player","marker","setupPlayerMarker","harmonyMarker","setupHarmonyMarker","setupStartView","setupPauseView","scene","init","transit","keys","removeChild","main","pause","gResult","len4","q","ref5","updateUnits","updateBullets","changePoint","point","offAll","setupResultView","phase","next","bind","cdm","d","indexify","len5","ref6","ref7","results","w","rx","ry","edm","ceil","pos","getNear","postMessage","map","g","randf","ang","setupUnit","addBullet","shotang","setupBullet","bullets","hitCheck","floor","_","remove","uniq","fix","unit","poss","rad","getCollider","PI","cos","sin","vel","setupText","font","color","stylex","styley","text","PIXI","Text","fill","align","position","width","height","Graphics","lineStyle","drawRect","alpha","col","text2","text3","text4","beginFill","endFill","filters","BlurFilter","blur","isWin","draw","filter2","g2","type","moveTo","lineTo","scoreborad","scoreborad2","scoreboradUpdate","gs","blendMode","BLEND_MODES","ADD","p0x","p0y","drawCircle","p1x","p1y","p2x","p2y","p3x","p3y","hp","harmonyMarkerUpdate","harmonyMarkerRemove","rotation","limit","r2","pow","atan2","getNear2","target","p1","p2","r1","ti","results1","update","id","removeflag","brain","removeList","location","reload","../content/data/meta","./brain/attacker","./brain/defender","./brain/human","./bullet","./input","./team","./unit","./util",5,"IDOL","MOVE","TOP","BOTTOM","LEFT","RIGHT","ATTACK","AIM","FOWARD","HARMONY","MASTER","SLAVE",6,"Brain",7,"ACTION","extend","child","parent","ctor","constructor","key","hasProp","__super__","hasOwnProperty","superClass","prevacts","near","acts","angs","cand","cd","cdr","dis","dis2","index2","mind","mx","my","randArray","../actions","../brain","../util",8,"ed",9,10,"colls","rad45",11,"indexOf","item","domElement","buttons","keydown","keyup","mapper","mouseEvent","document","listener","keyMap",13,16,17,18,27,32,37,38,39,40,"keycode","status","String","fromCharCode","toLowerCase","Bacon","fromEventTarget","keyCode","merge","charCodeAt","onValue","forEach","button","clientX","clientY","btn","cb","onMouseDown","offMouseDown","onMouseUp","offMouseUp","transform","onDoubleClick","offDoubleClick","active","md","mu","onMouseMove","offMouseMove",12,"Main","View","view","world","loop","requestAnimationFrame","render","$","./World","./view","INIT","READY","ACTIVE","DEAD",14,"diff","max","eachMembers",15,"STATUS","fullhp","shotInterval","respawnCount","prevHarmony","action","actions","shot","near2","act","aimflag","harmonyflag","moveflag","shotflag","harmony","./actions","./status","Utility","random","randRange","img","renderer","autoDetectRenderer","backgroundColor","antialias","body","append","createElement","src","style","left","top","Container","stats","Stats","setMode","right","updater","begin"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","module.exports={\r\n  \"version\": \"0.0.1\"\r\n}",null,"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","// shim for using process in browser\n\nvar process = module.exports = {};\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = setTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    clearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        setTimeout(drainQueue, 0);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","path = require 'path'\r\nfs = require 'fs'\r\n\r\nutil = require './util'\r\nInput = require './input'\r\nUnit = require './unit'\r\nTeam = require './team'\r\nBullet = require './bullet'\r\nHumanBrain = require './brain/human'\r\nAttackerBrain = require './brain/attacker'\r\nDefenderBrain = require './brain/defender'\r\nmeta = require '../content/data/meta'\r\n\r\n\r\nclass World\r\n\r\n  constructor: (@container, @viewsize, @size = 32)->\r\n    @input = new Input\r\n    @size2 = @size * @size\r\n    @gridSize = @viewsize / @size\r\n\r\n    @resolution = 2\r\n    @resolution2 = @resolution * @resolution\r\n    @sizer = @size * @resolution\r\n    @sizer2 = @sizer * @sizer\r\n    @gridSizer = @viewsize / @sizerm\r\n\r\n    @field = new Uint8Array @size2\r\n    @dismap = new Int32Array @size2\r\n\r\n\r\n    playerTeam = 1\r\n    @team = []\r\n    base = [{}, {}]\r\n    core = [{}, {}]\r\n\r\n    mapstr = fs.readFileSync path.resolve(__dirname, '../content/data/field1.txt'), 'utf8'\r\n    mapstr = mapstr.replace /\\r*\\n/g, ''\r\n    for v, i in @field\r\n      @field[i] = parseInt mapstr.charAt(i)\r\n      x = i % @size\r\n      y = i / @size | 0\r\n      switch @field[i]\r\n        when 6 then base[0] = {x: x, y: y}\r\n        when 7 then base[1] = {x: x, y: y}\r\n        when 2 then core[0] = {x: x, y: y}\r\n        when 4 then core[1] = {x: x, y: y}\r\n\r\n    @team.push new Team(0, base[0], core[0], 0xffa000)\r\n    @team.push new Team(1, base[1], core[1], 0x00ffff)\r\n\r\n    for t, i in @team\r\n      t.mapsize = @size\r\n      t.mapresolution = @resolution\r\n      t.coredismap = new Int32Array @sizer2 \r\n      t.coredirmap = new Int32Array @sizer2\r\n      t.enemydismap = new Int32Array @sizer2\r\n      t.enemydismapUpdate = true\r\n\r\n      @setCoredismap t, @team[1 - i].core #TODO:\r\n      @setCoredirmap t, @team[1 - i].core\r\n      memberNum = if playerTeam is i then 3 else 4\r\n      defnum = if playerTeam is i then 2 else 1 + util.rand(3)\r\n      for k in [0...memberNum]\r\n        if k < defnum\r\n          b = new DefenderBrain t\r\n        else \r\n          b = new AttackerBrain t\r\n        u = new Unit i, t.base, b\r\n        @addUnit u\r\n\r\n    t0 = @team[0]\r\n    t1 = @team[1]\r\n    \r\n    t0.worker = new Worker \"./content/js/worker.js\"\r\n    t1.worker = new Worker \"./content/js/worker2.js\"\r\n    \r\n    t0.worker.addEventListener 'message', (e)->\r\n      t0.enemydismap = e.data\r\n      t0.enemydismapUpdate = true\r\n    , false\r\n\r\n    t1.worker.addEventListener 'message', (e)->\r\n      t1.enemydismap = e.data\r\n      t1.enemydismapUpdate = true\r\n    , false\r\n\r\n    for t, i in @team\r\n      @setEnemydismap t, @team[1 - i].units\r\n\r\n    for v, i in @dismap\r\n      @dismap[i] = if [0, 6, 7, 8].some((v)=> @field[i] is v) then 1 else -1\r\n\r\n    @gField = @setupField()\r\n    @container.addChild @gField\r\n    \r\n    humanBrain = new HumanBrain @input\r\n    @player = new Unit playerTeam, @team[playerTeam].base, humanBrain\r\n    @addUnit @player\r\n\r\n    @marker = @setupPlayerMarker @player\r\n    @container.addChild @marker\r\n\r\n    @harmonyMarker = @setupHarmonyMarker @player\r\n    @container.addChild @harmonyMarker\r\n\r\n    gStart = @setupStartView()\r\n    @container.addChild gStart\r\n\r\n    gPause = @setupPauseView()\r\n\r\n    @scene = {}\r\n    @scene.init = =>\r\n      (transit)=>\r\n        if @input.keys['z']\r\n          @container.removeChild gStart\r\n          transit 'main'\r\n    \r\n    @scene.main = =>\r\n      pause = false\r\n      @input.on 'space', =>\r\n        pause = not pause\r\n        if pause\r\n          @container.addChild gPause\r\n        else\r\n          @container.removeChild gPause\r\n      (transit)=>\r\n        return if pause\r\n        @updateUnits()\r\n        @updateBullets()\r\n        @team[0].changePoint -100 if @input.keys['o'] # debug\r\n        @team[1].changePoint -100 if @input.keys['p'] # debug\r\n\r\n        result = undefined\r\n        for t, i in @team\r\n          if t.point is 0\r\n            result = if i is playerTeam then false else true\r\n            break\r\n\r\n        if result isnt undefined\r\n          @input.offAll()\r\n          gResult = @setupResultView result\r\n          @container.addChild gResult\r\n          transit 'result'\r\n    \r\n    @scene.result = =>\r\n      (transit)->\r\n\r\n    @phase = null\r\n    @transit = (next)=> @phase = @scene[next]().bind @, @transit\r\n\r\n    @transit 'init'\r\n\r\n  setCoredismap: (team, core)->\r\n    cdm = team.coredismap\r\n    queue = []\r\n    for k in [0...@resolution]\r\n      for i in [0...@resolution]\r\n        queue.push\r\n          x: core.x * @resolution + i\r\n          y: core.y * @resolution + k\r\n          v: 1\r\n\r\n    dir = []\r\n    for k in [-1, 0, 1]\r\n      for i in [-1, 0, 1]\r\n        continue if i is 0 and k is 0\r\n        dir.push [i, k]\r\n\r\n    indexify = (x, y)=>\r\n      rx = x * @resolution\r\n      ry = y * @resolution\r\n      res = []\r\n      for k in [0...@resolution]\r\n        for i in [0...@resolution]\r\n          res.push (rx + i) + (ry + k) * @sizer\r\n      res\r\n    \r\n    for f, i in @field\r\n      continue if [0, 6, 7, 8].some((u)=> f is u)\r\n      x = i % @size\r\n      y = i / @size | 0\r\n      for index in indexify(x, y)\r\n        cdm[index] = -1\r\n\r\n    while queue.length > 0\r\n      {x, y, v} = queue[0]\r\n      queue.splice 0, 1\r\n      for d in dir\r\n        index = (x + d[0]) + (y + d[1]) * @sizer\r\n        continue unless cdm[index] is 0\r\n        cdm[index] = v\r\n        queue.push\r\n          x: x + d[0]\r\n          y: y + d[1]\r\n          v: v + 1\r\n\r\n    for index in indexify(core.x, core.y)\r\n      cdm[index] = 0\r\n\r\n  setCoredirmap: (team, core)->\r\n    cdm = team.coredirmap\r\n    queue = []\r\n    for k in [0...@resolution]\r\n      queue.push\r\n        x: core.x * @resolution + k\r\n        y: core.y * @resolution\r\n        dir: 3\r\n      queue.push\r\n        x: core.x * @resolution + k\r\n        y: core.y * @resolution + @resolution - 1\r\n        dir: 4\r\n      queue.push\r\n        x: core.x * @resolution\r\n        y: core.y * @resolution + k\r\n        dir: 1\r\n      queue.push\r\n        x: core.x * @resolution + @resolution - 1\r\n        y: core.y * @resolution + k\r\n        dir: 2\r\n\r\n    indexify = (x, y)=>\r\n      rx = x * @resolution\r\n      ry = y * @resolution\r\n      res = []\r\n      for k in [0...@resolution]\r\n        for i in [0...@resolution]\r\n          res.push (rx + i) + (ry + k) * @sizer\r\n      res\r\n    \r\n    for f, i in @field\r\n      continue if [0, 6, 7, 8].some((u)=> f is u)\r\n      x = i % @size\r\n      y = i / @size | 0\r\n      for index in indexify(x, y)\r\n        cdm[index] = -1\r\n\r\n    while queue.length > 0\r\n      {x, y, dir} = queue[0]\r\n      queue.splice 0, 1\r\n      d = [0, 0]\r\n      d[0] = if dir < 3 then (dir - 1) * 2 - 1 else 0\r\n      d[1] = if dir > 2 then (dir - 3) * 2 - 1 else 0\r\n      index = (x + d[0]) + (y + d[1]) * @sizer\r\n      unless cdm[index] is -1\r\n        cdm[index] = dir\r\n        queue.push\r\n          x: x + d[0]\r\n          y: y + d[1]\r\n          dir: dir\r\n\r\n    for index in indexify(core.x, core.y)\r\n      cdm[index] = 0\r\n\r\n\r\n  setEnemydismap: (team, units)->\r\n    return unless team.enemydismapUpdate\r\n    for t, i in team.enemydismap\r\n      team.enemydismap[i] = 0\r\n\r\n    edm = team.enemydismap\r\n    queue = []\r\n    dir = []\r\n    for k in [-1, 0, 1]\r\n      for i in [-1, 0, 1]\r\n        continue if i is 0 and k is 0\r\n        dir.push [i, k]     \r\n    \r\n    indexify = (x, y)=>\r\n      rx = x * @resolution\r\n      ry = y * @resolution\r\n      res = []\r\n      for k in [0...@resolution]\r\n        for i in [0...@resolution]\r\n          res.push (rx + i) + (ry + k) * @sizer\r\n      res\r\n    \r\n    for u in units\r\n      x = Math.ceil(u.i.pos.x * @resolution)\r\n      y = Math.ceil(u.i.pos.y * @resolution) \r\n      \r\n      queue.push\r\n        x: x\r\n        y: y\r\n        v: 1\r\n\r\n    unless @getNear team.core, units, 16\r\n      x = Math.ceil(team.core.x * @resolution) + util.rand(8) - 4\r\n      y = Math.ceil(team.core.y * @resolution) + util.rand(8) - 4\r\n      queue.push\r\n        x: x\r\n        y: y\r\n        v: 1\r\n    \r\n    for f, i in @field\r\n      continue if [0, 6, 7, 8].some((u)=> f is u)\r\n      x = i % @size\r\n      y = i / @size | 0\r\n      for index in indexify(x, y)\r\n        edm[index] = -1\r\n\r\n    team.enemydismapUpdate = false\r\n    team.worker.postMessage\r\n      map: edm\r\n      queue: queue\r\n      dir: dir\r\n      sizer: @sizer\r\n    ###\r\n    while queue.length > 0\r\n      {x, y, v} = queue[0]\r\n      queue.splice 0, 1\r\n      for d in dir\r\n        index = (x + d[0]) + (y + d[1]) * @sizer\r\n        continue unless edm[index] is 0\r\n        edm[index] = v\r\n        continue if v > 15\r\n        queue.push\r\n          x: x + d[0]\r\n          y: y + d[1]\r\n          v: v + 1\r\n    ###\r\n\r\n  addUnit: (u)->\r\n    t = u.team\r\n    {x, y} = @team[t].base\r\n    u.pos.x = x + util.randf 1\r\n    u.pos.y = y + util.randf 1\r\n    u.ang = if t % 2 then 180 else 0\r\n    g = @setupUnit u\r\n    @container.addChild g\r\n    @team[t].units.push\r\n      i: u\r\n      g: g\r\n\r\n  addBullet: (u)->\r\n    t = u.team\r\n    b = new Bullet {x: u.pos.x, y: u.pos.y}, 0.2, u.shotang, 0.1, u\r\n    g = @setupBullet b\r\n    @container.addChild g\r\n    @team[t].bullets.push\r\n      i: b\r\n      g: g\r\n\r\n  hitCheck: (x, y)->\r\n    return -2 if x < 0.5 or y < 0.5\r\n    return -2 if x > @size - 0.5 or y > @size - 0.5\r\n    i = Math.floor(x - 0.5) + @size * Math.floor(y - 0.5)\r\n    rx = x - 0.5 - Math.floor(x - 0.5)\r\n    ry = y - 0.5 - Math.floor(y - 0.5)\r\n    rx = 0 if rx < 0.0001\r\n    ry = 0 if ry < 0.0001\r\n    d = [@dismap[i], @dismap[i + 1], @dismap[i + @size], @dismap[i + @size + 1]]\r\n    f = [@field[i], @field[i + 1], @field[i + @size], @field[i + @size + 1]]\r\n    \r\n    res =  (1 - rx) * (1 - ry) * d[0] + (1 - rx) * ry * d[2] + rx * (1 - ry) * d[1] + rx * ry * d[3]\r\n    _.remove f, (v)-> v is 0\r\n    \r\n    return {d: res, f: _.uniq f} \r\n\r\n  fix: (unit)->\r\n    poss = unit.getCollider()\r\n    for p in poss\r\n      {d, f} = @hitCheck p.x, p.y\r\n      if d < 0\r\n        rad = (unit.ang + 180) * Math.PI / 180\r\n        unit.pos.x -= d * Math.cos rad\r\n        unit.pos.y -= d * Math.sin rad\r\n        unit.vel = 0.0\r\n\r\n  setupText: (x, y, str, font, color, stylex, styley)->\r\n    text = new PIXI.Text str,\r\n      font: font\r\n      fill: color\r\n      align: stylex\r\n    switch stylex\r\n      when 'left'\r\n        text.position.x = x\r\n      when 'center'\r\n        text.position.x = x - text.width / 2\r\n      when 'right'\r\n        text.position.x = x - text.width\r\n    switch styley\r\n      when 'top'\r\n        text.position.y = y\r\n      when 'center'\r\n        text.position.y = y - text.height / 2\r\n      when 'bottom'\r\n        text.position.y = y - text.height\r\n    return text\r\n\r\n  setupPlayerMarker: (unit)->\r\n    g = new PIXI.Graphics\r\n    size = unit.size * @gridSize * 5\r\n\r\n    g.lineStyle 3, 0xffff00\r\n      .drawRect -size, -size, size * 2, size * 2\r\n\r\n    g.alpha = 0.4\r\n\r\n    return g\r\n\r\n  setupHarmonyMarker: (unit)->\r\n    g = new PIXI.Graphics\r\n    size = unit.size * @gridSize * 5\r\n\r\n    g.lineStyle 3, 0x33ffaa\r\n      .drawRect -size, -size, size * 2, size * 2\r\n\r\n    g.alpha = 0.4\r\n\r\n    g.position.x = -50\r\n    g.position.y = -50\r\n\r\n    return g\r\n\r\n\r\n  setupStartView: ->\r\n    g = new PIXI.Graphics\r\n    g.lineStyle 0\r\n      .beginFill 0x333333\r\n      .drawRect 0, 0, @viewsize, @viewsize\r\n      .endFill()\r\n    g.alpha = 0.7\r\n\r\n    text = @setupText @viewsize / 2, @viewsize / 2, 'PRESS Z', '24px Papyrus', 0xffffff, 'center', 'center'\r\n    g.addChild text\r\n\r\n    col = (util.rand(256) << 16) + (util.rand(256) << 8) + (util.rand(256))\r\n    text2 = @setupText @viewsize / 2, @viewsize / 4, 'harmony', '56px Papyrus', col, 'center', 'center'\r\n    filter = new PIXI.filters.BlurFilter\r\n    filter.blur = 32\r\n    text2.filters = [filter]\r\n    g.addChild text2\r\n\r\n    text3 = @setupText @viewsize / 2, @viewsize / 4, 'harmony', '56px Papyrus', 0xffffff, 'center', 'center'\r\n    g.addChild text3\r\n\r\n    text4 = @setupText @viewsize, @viewsize, \"version: #{meta.version}\", '16px Papyrus', 0xffffff, 'right', 'bottom'\r\n    g.addChild text4\r\n\r\n    return g\r\n\r\n  setupPauseView: ->\r\n    g = new PIXI.Graphics\r\n    g.lineStyle 0\r\n      .beginFill 0x333333\r\n      .drawRect 0, 0, @viewsize, @viewsize\r\n      .endFill()\r\n    g.alpha = 0.7\r\n\r\n    text = @setupText @viewsize / 2, @viewsize / 2, 'Pause', '24px Papyrus', 0xffffff, 'center', 'center'\r\n    g.addChild text\r\n\r\n    return g\r\n\r\n  setupResultView: (isWin)->\r\n    filter = new PIXI.filters.BlurFilter\r\n    filter.blur = 24\r\n\r\n    g = new PIXI.Graphics\r\n    g.lineStyle 0\r\n      .beginFill 0x333333\r\n      .drawRect 0, 0, @viewsize, @viewsize\r\n      .endFill()\r\n    g.alpha = 0.7\r\n    col = if isWin then 0xffff00 else 0x00ffff\r\n    str = if isWin then 'You Win' else 'You Lose'\r\n    text = @setupText @viewsize / 2, @viewsize / 2, str, '36px Papyrus', col, 'center', 'center'\r\n    g.addChild text\r\n\r\n    text3 = @setupText @viewsize / 2, @viewsize / 2, str, '36px Papyrus', col, 'center', 'center'\r\n    text3.filters = [filter]\r\n    g.addChild text3\r\n\r\n    text2 = @setupText @viewsize / 2, @viewsize * 3 / 4, 'PRESS ESC or Reload', '16px Papyrus', 0xffffff, 'center', 'bottom'\r\n    g.addChild text2\r\n    \r\n    return g\r\n\r\n  setupField: ->\r\n    g = new PIXI.Graphics\r\n    g2 = new PIXI.Graphics\r\n    filter = new PIXI.filters.BlurFilter\r\n    filter.blur = 7\r\n\r\n    draw = (type, width, color)=>\r\n      \r\n      for v, i in @dismap\r\n        x = i % @size\r\n        y = i / @size | 0\r\n        continue if x > @size - 2\r\n        break if y > @size - 2 \r\n        d = [@dismap[i], @dismap[i + 1], @dismap[i + @size], @dismap[i + @size + 1]]\r\n        f = [@field[i], @field[i + 1], @field[i + @size], @field[i + @size + 1]]\r\n      \r\n        continue unless f.some((v)-> v is type)\r\n      \r\n        p = []\r\n        p.push {x: x + 0.5, y: y} if d[0] * d[1] < 0\r\n        p.push {x: x, y: y + 0.5} if d[0] * d[2] < 0\r\n        p.push {x: x + 1.0, y: y + 0.5} if d[1] * d[3] < 0\r\n        p.push {x: x + 0.5, y: y + 1.0} if d[2] * d[3] < 0\r\n        continue unless p.length is 2\r\n        \r\n        g.lineStyle width, color\r\n          .moveTo (p[0].x + 0.5) * @gridSize, (p[0].y + 0.5) * @gridSize\r\n          .lineTo (p[1].x + 0.5) * @gridSize, (p[1].y + 0.5) * @gridSize\r\n\r\n        g2.lineStyle width * 2, color\r\n          .moveTo (p[0].x + 0.5) * @gridSize, (p[0].y + 0.5) * @gridSize\r\n          .lineTo (p[1].x + 0.5) * @gridSize, (p[1].y + 0.5) * @gridSize\r\n\r\n    draw 1, 2, 0x00ff7f\r\n    draw 2, 2, 0xff7f00\r\n    draw 3, 2, 0xff3000\r\n    draw 4, 2, 0x00a0ff\r\n    draw 5, 2, 0x0050ff\r\n\r\n    filter2 = new PIXI.filters.BlurFilter\r\n    filter2.blur = 32\r\n\r\n    for t in @team\r\n      str = \"#{t.point}\"\r\n      col = 0xffffff\r\n      x = (t.base.x + 0.5) * @gridSize\r\n      y = (t.base.y + 0.5) * @gridSize\r\n      t.scoreborad = @setupText x, y, str, '36px Papyrus', col, 'center', 'center'\r\n      t.scoreborad2 = @setupText x, y, str, '36px Papyrus', t.color, 'center', 'center'\r\n      t.scoreborad2.filters = [filter2]\r\n      t.scoreborad.alpha = 0.7\r\n      \r\n      t.scoreboradUpdate = do =>\r\n        gs = @gridSize\r\n        ->\r\n          x = (@base.x + 0.5) * gs\r\n          y = (@base.y + 0.5) * gs\r\n          @scoreborad.text = \"#{@point}\" \r\n          @scoreborad2.text = @scoreborad.text\r\n          @scoreborad.position.x = x - @scoreborad.width / 2\r\n          @scoreborad.position.y = y - @scoreborad.height / 2\r\n          @scoreborad2.position  = @scoreborad.position\r\n      \r\n      g.addChild t.scoreborad2\r\n      g.addChild t.scoreborad\r\n\r\n    g.blendMode = PIXI.BLEND_MODES.ADD\r\n    g.alpha = 0.7\r\n    #g2.alpha = 0.5\r\n    g2.filters = [filter]\r\n\r\n    g.addChild g2\r\n\r\n    ###\r\n    for t, ti in @team\r\n      continue unless ti is 1\r\n      for d, i in t.enemydismap #t.coredirmap\r\n        continue unless d > 0\r\n        x = i % @sizer\r\n        y = (i / @sizer) | 0\r\n        tx = (x + 0.5) * @gridSizer\r\n        ty = (y + 0.5) * @gridSizer\r\n        text = @setupText tx, ty, \"#{d}\", '8px', 0xffffff, 'center', 'center'\r\n        g.addChild text\r\n    ###\r\n\r\n    return g\r\n\r\n  setupBullet: (b)->\r\n    g = new PIXI.Graphics\r\n    \r\n    p0x = b.pos.x * @gridSize\r\n    p0y = b.pos.y * @gridSize\r\n    size = b.size * @gridSize\r\n\r\n    g.lineStyle 1, @team[b.team].color\r\n      .drawCircle 0, 0, size\r\n\r\n    g.position.x = p0x\r\n    g.position.y = p0y \r\n\r\n    return g\r\n\r\n  setupUnit: (unit)->\r\n    g = new PIXI.Graphics\r\n    \r\n    p0x = unit.pos.x * @gridSize\r\n    p0y = unit.pos.y * @gridSize\r\n    size = unit.size * @gridSize\r\n\r\n    p1x = size\r\n    p1y = 0\r\n\r\n    rad = -150 * Math.PI / 180\r\n    p2x = size * Math.cos rad\r\n    p2y = size * Math.sin rad\r\n\r\n    rad = 150 * Math.PI / 180\r\n    p3x = size * Math.cos rad\r\n    p3y = size * Math.sin rad\r\n    \r\n    g.lineStyle 2, @team[unit.team].color\r\n      .moveTo p1x, p1y\r\n      .lineTo p2x, p2y\r\n      .lineTo 0, 0\r\n      .lineTo p3x, p3y\r\n      .lineTo p1x, p1y\r\n\r\n    unit.scoreborad = @setupText p0x + size * 1.4, p0y - size * 1.4, \"#{unit.hp}\", '14px Papyrus', 0xffffff, 'center', 'center'\r\n    unit.scoreboradUpdate = do =>\r\n      gs = @gridSize\r\n      ->\r\n        p0x = @pos.x * gs\r\n        p0y = @pos.y * gs\r\n        size = @size * gs\r\n        @scoreborad.text = \"#{@hp}\"\r\n        @scoreborad.position.x = p0x + size * 1.4\r\n        @scoreborad.position.y = p0y - size * 1.4\r\n\r\n    unit.harmonyMarkerUpdate = do =>\r\n      gs = @gridSize\r\n      (pos)=>\r\n        p0x = pos.x * gs\r\n        p0y = pos.y * gs\r\n        @harmonyMarker.position.x = p0x\r\n        @harmonyMarker.position.y = p0y\r\n\r\n    unit.harmonyMarkerRemove = do =>\r\n      gs = @gridSize\r\n      =>\r\n        @harmonyMarker.position.x = -50\r\n        @harmonyMarker.position.y = -50\r\n\r\n    @container.addChild unit.scoreborad\r\n    g.position.x = p0x\r\n    g.position.y = p0y \r\n    g.rotation = unit.shotang * Math.PI / 180\r\n\r\n    return g\r\n\r\n  getNear: (pos, units, limit)->\r\n    ang = undefined\r\n    r = 100000\r\n    for u in units\r\n      {x, y} = u.i.pos\r\n      r2 = Math.pow(pos.x - x, 2) + Math.pow(pos.y - y, 2) \r\n      if 0 < r2 < limit * limit and r2 < r\r\n        rad = Math.atan2 y - pos.y, x - pos.x\r\n        ang = rad * 180 / Math.PI\r\n        r = r2\r\n    return ang\r\n\r\n  getNear2: (pos, units, limit)->\r\n    target = undefined\r\n    r = 100000\r\n    for u in units\r\n      {x, y} = u.i.pos\r\n      r2 = Math.pow(pos.x - x, 2) + Math.pow(pos.y - y, 2) \r\n      if 0 < r2 < limit * limit and r2 < r\r\n        target = u.i\r\n        r = r2\r\n    return target\r\n\r\n  updateUnits: ->\r\n    for t, ti in @team\r\n      unless util.rand 8\r\n        @setEnemydismap t, @team[1 - ti].units\r\n      for u in t.units\r\n        u.i.update (v)=>\r\n          @addBullet v\r\n        , (pos, limit)=>\r\n          @getNear pos, @team[1 - ti].units, limit\r\n        , (pos, limit)=>\r\n          @getNear2 pos, @team[ti].units, limit\r\n\r\n        @fix u.i\r\n\r\n        for t in @team\r\n          continue if u.i.team is t.id \r\n          p1 = u.i.pos\r\n          r1 = u.i.size * 3 / 4\r\n          for b in t.bullets\r\n            p2 = b.i.pos\r\n            r2 = b.i.size\r\n            if Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2) < Math.pow(r1 + r2, 2)\r\n              b.i.removeflag = true\r\n              u.i.hp--\r\n              u.i.scoreboradUpdate()\r\n\r\n        u.g.position.x = u.i.pos.x * @gridSize\r\n        u.g.position.y = u.i.pos.y * @gridSize\r\n        u.g.rotation = u.i.shotang * Math.PI / 180\r\n\r\n        if u.i.brain.input?\r\n          @marker.position.x = u.i.pos.x * @gridSize\r\n          @marker.position.y = u.i.pos.y * @gridSize\r\n          \r\n  updateBullets: ->\r\n    for t in @team\r\n      removeList = []\r\n      for b, i in t.bullets\r\n        b.i.update()\r\n        poss = b.i.getCollider()\r\n        for p in poss\r\n          {d, f} = @hitCheck p.x, p.y\r\n          if d < 0\r\n            b.i.removeflag = true\r\n            for type in f\r\n              switch type\r\n                when 2\r\n                  break if b.i.team is 0\r\n                  @team[0].changePoint -1\r\n                when 4\r\n                  break if b.i.team is 1\r\n                  @team[1].changePoint -1\r\n\r\n        b.g.position.x = b.i.pos.x * @gridSize\r\n        b.g.position.y = b.i.pos.y * @gridSize\r\n        b.g.rotation = b.i.rad\r\n\r\n        if b.i.removeflag\r\n          removeList.push i\r\n          @container.removeChild b.g \r\n\r\n      _.remove t.bullets, (v, k)-> removeList.some((u)-> u is k)\r\n\r\n\r\n  update: ->\r\n    location.reload() if @input.keys['esc']\r\n    @phase()\r\n\r\nmodule.exports = World\r\n","module.exports = \r\n  IDOL: 0\r\n  MOVE:\r\n    TOP:    1\r\n    BOTTOM: 2\r\n    LEFT:   3\r\n    RIGHT:  4\r\n  ATTACK:\r\n    AIM:    5\r\n    FOWARD: 6\r\n  HARMONY:\r\n    MASTER: 7\r\n    SLAVE:  8","class Brain\r\n  constructor: ()->\r\n\r\n\r\n  update: (unit)->\r\n\r\n\r\nmodule.exports = Brain\r\n","util = require '../util'\r\nBrain = require '../brain'\r\nACTION = require '../actions'\r\n\r\nclass AttackerBrain extends Brain\r\n  constructor: (@team)->\r\n    super()\r\n    @prevacts = []\r\n\r\n  update: (unit, near)->\r\n    super unit\r\n\r\n    if util.rand 8\r\n      return @prevacts\r\n\r\n    acts = [] \r\n\r\n    dir = []\r\n    for k in [-1, 0, 1]\r\n      for i in [-1, 0, 1]\r\n        continue if i is 0 and k is 0\r\n        dir.push [i, k]\r\n\r\n    {x, y} = unit.pos\r\n    mx = Math.ceil((x - 0.5) * @team.mapresolution)\r\n    my = Math.ceil((y - 0.5) * @team.mapresolution)\r\n    cd = @team.coredismap[mx + my * @team.mapsize * @team.mapresolution]\r\n    cdr = @team.coredirmap[mx + my * @team.mapsize * @team.mapresolution]\r\n    \r\n    if cdr > 0\r\n      angs = [0, 180, 90, 270]\r\n      ang = (unit.ang + 360) % 360\r\n      if ang is angs[cdr - 1]\r\n        if util.rand(5) is 0  and near unit.pos, 5\r\n          acts.push ACTION.ATTACK.AIM\r\n        else \r\n          acts.push ACTION.ATTACK.FOWARD\r\n      else\r\n        switch cdr\r\n          when 1 then acts.push ACTION.MOVE.RIGHT\r\n          when 2 then acts.push ACTION.MOVE.LEFT\r\n          when 3 then acts.push ACTION.MOVE.BOTTOM\r\n          when 4 then acts.push ACTION.MOVE.TOP\r\n      \r\n    else if util.rand 8\r\n      mind = cd\r\n      cand = []\r\n      for d in dir\r\n        index = (mx + d[0]) + (my + d[1]) * @team.mapsize * @team.mapresolution\r\n        index2 = (mx + d[0] * 2) + (my + d[1] * 2) * @team.mapsize * @team.mapresolution\r\n        dis = @team.coredismap[index]\r\n        dis2 = @team.coredismap[index2]\r\n        continue if dis < 0\r\n        continue if util.rand(2) and dis2 < 0\r\n        if dis is mind\r\n          cand.push d\r\n        else if dis < mind and dis > 2\r\n          cand = [d]\r\n          mind = dis\r\n  \r\n      if 0 < cand.length < 5\r\n        d = util.randArray cand\r\n        switch d[0]\r\n          when -1 then acts.push ACTION.MOVE.LEFT\r\n          when 1 then acts.push ACTION.MOVE.RIGHT\r\n        switch d[1]\r\n          when -1 then acts.push ACTION.MOVE.TOP\r\n          when 1 then acts.push ACTION.MOVE.BOTTOM\r\n        if near unit.pos, 5\r\n          acts.push ACTION.ATTACK.AIM\r\n      else\r\n        acts.push util.randArray([\r\n          ACTION.MOVE.TOP, \r\n          ACTION.MOVE.BOTTOM, \r\n          ACTION.MOVE.LEFT, \r\n          ACTION.MOVE.RIGHT\r\n        ])\r\n        acts.push ACTION.ATTACK.AIM\r\n    else\r\n      acts.push util.randArray([\r\n        ACTION.MOVE.TOP, \r\n        ACTION.MOVE.BOTTOM, \r\n        ACTION.MOVE.LEFT, \r\n        ACTION.MOVE.RIGHT\r\n      ])\r\n      acts.push ACTION.ATTACK.AIM\r\n\r\n    @prevacts = acts\r\n\r\n    return acts\r\n\r\nmodule.exports = AttackerBrain","util = require '../util'\r\nBrain = require '../brain'\r\nACTION = require '../actions'\r\n\r\nclass DefenderBrain extends Brain\r\n  constructor: (@team)->\r\n    super()\r\n    @prevacts = []\r\n\r\n  update: (unit, near)->\r\n    super unit\r\n\r\n    if util.rand 8\r\n      return @prevacts\r\n\r\n    acts = [] \r\n\r\n    dir = []\r\n    for k in [-1, 0, 1]\r\n      for i in [-1, 0, 1]\r\n        continue if i is 0 and k is 0\r\n        dir.push [i, k]\r\n\r\n    {x, y} = unit.pos\r\n    mx = Math.ceil((x - 0.5) * @team.mapresolution)\r\n    my = Math.ceil((y - 0.5) * @team.mapresolution)\r\n    ed = @team.enemydismap[mx + my * @team.mapsize * @team.mapresolution]\r\n    cdr = @team.coredirmap[mx + my * @team.mapsize * @team.mapresolution]\r\n    \r\n    if cdr > 0 #and util.rand 32\r\n      angs = [0, 180, 90, 270]\r\n      ang = (unit.ang + 360) % 360\r\n      if ang is angs[cdr - 1]\r\n        if util.rand(5) and near unit.pos\r\n          acts.push ACTION.ATTACK.AIM\r\n        else \r\n          acts.push ACTION.ATTACK.FOWARD\r\n      else\r\n        switch cdr\r\n          when 1 then acts.push ACTION.MOVE.RIGHT\r\n          when 2 then acts.push ACTION.MOVE.LEFT\r\n          when 3 then acts.push ACTION.MOVE.BOTTOM\r\n          when 4 then acts.push ACTION.MOVE.TOP\r\n      \r\n    else if util.rand(8) and 0 < ed\r\n      mind = ed\r\n      cand = []\r\n      for d in dir\r\n        index = (mx + d[0]) + (my + d[1]) * @team.mapsize * @team.mapresolution\r\n        #index2 = (mx + d[0] * 2) + (my + d[1] * 2) * @team.mapsize * @team.mapresolution\r\n        dis = @team.enemydismap[index]\r\n        #dis2 = @team.enemydismap[index2]\r\n        continue if dis < 0\r\n        #continue if util.rand(2) and dis2 < 0\r\n        if dis is mind\r\n          cand.push d\r\n        else if dis < mind and dis > 1\r\n          cand = [d]\r\n          mind = dis\r\n  \r\n      if 0 < cand.length < 5\r\n        if ed < 6\r\n          acts.push ACTION.ATTACK.AIM\r\n        else \r\n          acts.push ACTION.ATTACK.FOWARD\r\n        d = util.randArray cand\r\n        switch d[0]\r\n          when -1 then acts.push ACTION.MOVE.LEFT\r\n          when 1 then acts.push ACTION.MOVE.RIGHT\r\n        switch d[1]\r\n          when -1 then acts.push ACTION.MOVE.TOP\r\n          when 1 then acts.push ACTION.MOVE.BOTTOM\r\n      else\r\n        acts.push util.randArray([\r\n          ACTION.MOVE.TOP, \r\n          ACTION.MOVE.BOTTOM, \r\n          ACTION.MOVE.LEFT, \r\n          ACTION.MOVE.RIGHT\r\n        ])\r\n        acts.push ACTION.ATTACK.AIM\r\n\r\n    else\r\n      acts.push util.randArray([\r\n        ACTION.MOVE.TOP, \r\n        ACTION.MOVE.BOTTOM, \r\n        ACTION.MOVE.LEFT, \r\n        ACTION.MOVE.RIGHT\r\n      ])\r\n      acts.push ACTION.ATTACK.AIM\r\n\r\n    @prevacts = acts\r\n\r\n    return acts\r\n\r\nmodule.exports = DefenderBrain","Brain = require '../brain'\r\nACTION = require '../actions'\r\n\r\nclass HumanBrain extends Brain\r\n  constructor: (@input)->\r\n    super()\r\n\r\n\r\n  update: (unit)->\r\n    super unit\r\n    acts = []  \r\n\r\n    if @input.keys['up']\r\n      acts.push ACTION.MOVE.TOP\r\n    if @input.keys['down']\r\n      acts.push ACTION.MOVE.BOTTOM\r\n    if @input.keys['right']\r\n      acts.push ACTION.MOVE.RIGHT\r\n    if @input.keys['left']\r\n      acts.push ACTION.MOVE.LEFT\r\n    if @input.keys['x']\r\n      acts.push ACTION.HARMONY.MASTER\r\n    if @input.keys['z'] and @input.keys['shift']\r\n      acts.push ACTION.ATTACK.AIM\r\n    else if @input.keys['z']\r\n      acts.push ACTION.ATTACK.FOWARD\r\n    \r\n    \r\n    acts\r\n\r\nmodule.exports = HumanBrain","class Bullet\r\n  constructor: (@pos, @size, ang, @vel, @parent)->\r\n    @rad = ang * Math.PI / 180\r\n    @team = @parent.team\r\n    @r = 0\r\n    \r\n  getCollider: ->\r\n    rad45 = Math.PI * 45 / 180\r\n    colls = []\r\n    colls.push\r\n      x: @pos.x # + @size * Math.cos @rad\r\n      y: @pos.y # + @size * Math.sin @rad\r\n    colls.push\r\n      x: @pos.x + @size * Math.cos (@rad + rad45)\r\n      y: @pos.y + @size * Math.sin (@rad + rad45)\r\n    colls.push\r\n      x: @pos.x + @size * Math.cos (@rad - rad45)\r\n      y: @pos.y + @size * Math.sin (@rad - rad45)\r\n    colls\r\n\r\n  update: ->\r\n    @pos.x += @vel * Math.cos @rad\r\n    @pos.y += @vel * Math.sin @rad\r\n    @r += @vel\r\n\r\nmodule.exports = Bullet\r\n","class Input\r\n  constructor: (@domElement = document)->\r\n    @keys = {}\r\n    @listener = {}\r\n\r\n    @keyMap =\r\n      8: 'backspace'\r\n      13: 'enter'\r\n      16: 'shift'\r\n      17: 'ctrl'\r\n      18: 'alt'\r\n      27: 'esc'\r\n      32: 'space'\r\n      37: 'left'\r\n      38: 'up'\r\n      39: 'right'\r\n      40: 'down'\r\n\r\n    mapper = (keycode, status)=>\r\n      key: @keyMap[keycode] or String.fromCharCode(keycode).toLowerCase()\r\n      status: status\r\n\r\n    keydown = Bacon.fromEventTarget(@domElement, 'keydown').map (e)=> mapper.call @, e.keyCode, true\r\n    keyup = Bacon.fromEventTarget(@domElement, 'keyup').map (e)=> mapper.call @, e.keyCode, false\r\n    keydown.merge(keyup).filter (e)->\r\n      code = e.key.charCodeAt 0\r\n      47 < code < 58 or 96 < code < 123\r\n    .onValue (e)=>\r\n      @keys[e.key] = e.status\r\n      return unless e.status \r\n      @listener[e.key]?.forEach (v)-> do v\r\n\r\n    buttons = [1, 2]\r\n    \r\n    mouseEvent = (type)=>\r\n      listener = {}\r\n      buttons.forEach (e)-> listener[e] = []\r\n      Bacon.fromEventTarget @domElement, type\r\n        .filter (e)-> e.button in buttons\r\n        .onValue (e)-> listener[e.button].forEach (v)-> v e.clientX, e.clientY\r\n      [ \r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    [@onMouseDown, @offMouseDown] = mouseEvent 'mousedown'\r\n    [@onMouseUp, @offMouseUp] = mouseEvent 'mouseup'\r\n    [@onDoubleClick, @offDoubleClick] = _.transform mouseEvent('dblclick'), (res, e)-> res.push e.bind @, 1\r\n\r\n    [@onMouseMove, @offMouseMove] = do =>\r\n      listener = {}\r\n      active = {}\r\n      buttons.forEach (e)-> \r\n        active[e] = false\r\n        listener[e] = []\r\n      md = Bacon.fromEventTarget(@domElement, 'mousedown').map (e)-> [e.button, true]\r\n      mu = Bacon.fromEventTarget(@domElement, 'mouseup').map (e)-> [e.button, false]\r\n      md.merge(mu).onValue (e)-> active[e[0]] = e[1] if active[e[0]]?\r\n      Bacon.fromEventTarget(@domElement, 'mousemove').onValue (e)->\r\n        for own k, v of listener\r\n          v.forEach (u)-> u e.clientX, e.clientY if active[k] \r\n      [\r\n        (btn, cb)-> listener[btn]?.push cb,\r\n        (btn, cb)-> _.remove listener[btn], (v)-> if cb? then v is cb else true\r\n      ]\r\n\r\n    @offAll = =>\r\n      buttons.forEach (v)=>\r\n        @offMouseDown v\r\n        @offMouseUp v\r\n        @offMouseMove v\r\n      @offDoubleClick()\r\n      @listener = {}\r\n        \r\n\r\n  on: (key, cb)->\r\n    return @listener[key].push cb if @listener[key]\r\n    @listener[key] = [cb]\r\n\r\n  off: (key, cb)->\r\n    _.remove @listener[key], (v)-> v is cb\r\n\r\n\r\nmodule.exports = Input","'use strict'\r\n\r\nView = require './view'\r\nWorld = require './World'\r\n\r\nclass Main \r\n  constructor: ->\r\n    @view = new View\r\n    @world = new World @view.container, @view.size\r\n    \r\n  loop: ->\r\n    requestAnimationFrame => @loop()\r\n    @view.render => @world.update()\r\n\r\n$ -> do new Main().loop\r\n","module.exports = \r\n  INIT: 0\r\n  READY: 1\r\n  ACTIVE: 2\r\n  DEAD: 3","\r\nclass Team\r\n  constructor: (@id, @base, @core, @color, @point = 100)->\r\n    @units = []\r\n    @bullets = []\r\n\r\n  changePoint: (diff)->\r\n    @point += diff\r\n    @point = Math.max 0, @point\r\n    @scoreboradUpdate()\r\n\r\n  eachMembers: (f)->\r\n    f u for u in @units\r\n\r\nmodule.exports = Team","ACTION = require './actions'\r\nSTATUS = require './status'\r\nutil = require './util'\r\n\r\nclass Unit \r\n  constructor: (@team, @base, @brain)->\r\n    @pos = {x: 0, y: 0}\r\n    @ang = if @team % 2 then 180 else 0\r\n    @shotang = 0.0\r\n    @fullhp = 5\r\n    @hp = @fullhp\r\n    @size = 0.2\r\n    @vel = 0.0\r\n    @shotInterval = 0\r\n    @status = STATUS.ACTIVE\r\n    @respawnCount = 0\r\n    @prevHarmony = undefined\r\n\r\n  getCollider: ->\r\n    colls = []\r\n    rad = @ang * Math.PI / 180\r\n    colls.push\r\n      x: @pos.x + @size * Math.cos rad\r\n      y: @pos.y + @size * Math.sin rad\r\n    ###\r\n    rad = (@ang - 150) * Math.PI / 180\r\n    colls.push\r\n      x: @pos.x + @size * Math.cos rad\r\n      y: @pos.y + @size * Math.sin rad\r\n    rad = (@ang + 150) * Math.PI / 180\r\n    colls.push\r\n      x: @pos.x + @size * Math.cos rad\r\n      y: @pos.y + @size * Math.sin rad\r\n    ###\r\n    colls\r\n\r\n  action: (actions, shot, near, near2)->\r\n    moveflag = 0\r\n    aimflag = false\r\n    shotflag = false\r\n    harmonyflag = false\r\n    angs = [undefined, -90, 90, undefined, 180, -135, 135, 180, 0, -45, 45, 0, undefined, -90, 90, undefined]\r\n    if @harmony\r\n      actions = @harmony.filter (v)-> v isnt ACTION.HARMONY.MASTER\r\n      @harmonyMarkerUpdate @pos\r\n    for act in actions\r\n      switch act\r\n        when ACTION.MOVE.TOP\r\n          moveflag += 1\r\n        when ACTION.MOVE.BOTTOM\r\n          moveflag += 2\r\n        when ACTION.MOVE.LEFT\r\n          moveflag += 4\r\n        when ACTION.MOVE.RIGHT\r\n          moveflag += 8  \r\n        when ACTION.ATTACK.AIM\r\n          aimflag = true\r\n          shotflag = true\r\n        when ACTION.ATTACK.FOWARD\r\n          shotflag = true\r\n        when ACTION.HARMONY.MASTER\r\n          harmonyflag = true\r\n    \r\n    if harmonyflag\r\n      if @prevHarmony\r\n        @prevHarmony.harmony = actions\r\n      else\r\n        target = near2 @pos, 32\r\n        target.harmony = actions\r\n        @prevHarmony = target\r\n    else if @prevHarmony\r\n      @prevHarmony.harmonyMarkerRemove()\r\n      @prevHarmony.harmony = null\r\n      @prevHarmony = undefined\r\n\r\n    if angs[moveflag]?\r\n      @ang = angs[moveflag]\r\n      @vel = if aimflag then 0.03 else 0.06\r\n    else\r\n      @vel = 0\r\n\r\n    @shotang = @ang \r\n    @shotInterval-- if @shotInterval > 0\r\n\r\n    if shotflag and @shotInterval is 0\r\n      if aimflag\r\n        a = near @pos, 5\r\n        if a\r\n          @shotang = a \r\n      @shotInterval = 20\r\n      shot @\r\n\r\n  update: (shot, near, near2)->\r\n    switch @status\r\n      when STATUS.READY\r\n        if @respawnCount is 0\r\n          @status = STATUS.ACTIVE\r\n          @pos.x = @base.x + util.randf 1\r\n          @pos.y = @base.y + util.randf 1\r\n          @hp = @fullhp\r\n          @ang = if @team % 2 then 180 else 0\r\n        else\r\n          @respawnCount--\r\n      when STATUS.ACTIVE\r\n        @action @brain.update(@, near), shot, near, near2\r\n\r\n        rad = @ang * Math.PI / 180\r\n        @pos.x += @vel * Math.cos rad\r\n        @pos.y += @vel * Math.sin rad\r\n        @vel = @vel * 0.7\r\n        @vel = 0.0 if @vel * @vel < 0.0001\r\n\r\n       \r\n\r\n        if @hp <= 0\r\n          @status = STATUS.DEAD\r\n\r\n      when STATUS.DEAD\r\n        @pos.x = -100\r\n        @pos.y = -100\r\n        @status = STATUS.READY\r\n        @respawnCount = 180\r\n\r\n     @scoreboradUpdate()\r\n\r\n\r\nmodule.exports = Unit\r\n","class Utility\r\n  @rand = (n)->\r\n    Math.floor Math.random() * n\r\n\r\n  @randf = (n)->\r\n    Math.random() * n\r\n\r\n  @randRange = (min, max)->\r\n    Math.floor(Math.random() * (max - min + 1)) + min\r\n  \r\n  @randArray = (arr)->\r\n    arr[Math.floor Math.random() * arr.length]\r\n\r\n\r\nmodule.exports = Utility","class View\r\n  constructor: ->\r\n\r\n    @size = 640\r\n    \r\n    @renderer = PIXI.autoDetectRenderer @size, @size,\r\n        backgroundColor: 0x000000\r\n        antialias: true\r\n        #transparent: true\r\n    $(document.body).append @renderer.view\r\n\r\n    img = document.createElement 'img'\r\n    img.src = \"content/data/rule.png\"\r\n    img.style.position = 'absolute'\r\n    img.style.left = '640px'\r\n    img.style.top = '0px'\r\n    $(document.body).append img\r\n    \r\n    @container = new PIXI.Container\r\n\r\n    @stats = new Stats\r\n    @stats.setMode 0  # 0: fps, 1: ms, 2: mb\r\n    @stats.domElement.style.position = 'absolute'\r\n    @stats.domElement.style.right = '0px'\r\n    @stats.domElement.style.top = '0px'\r\n    $(document.body).append @stats.domElement\r\n\r\n  render: (updater)->\r\n    @stats.begin()\r\n    updater()\r\n    @renderer.render @container\r\n    @stats.end()\r\n\r\n\r\nmodule.exports = View\r\n"],"sourceRoot":"./src"}